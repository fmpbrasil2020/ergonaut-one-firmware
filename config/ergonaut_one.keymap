#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos { compatible = "zmk,combos"; };

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <39 40 41 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
            hold-trigger-on-release;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "MAIN";
            bindings = <
&kp DQT  &kp Q                &kp W            &kp E              &kp R         &kp T             &kp Y             &kp U         &kp I              &kp O            &kp P                &kp SQT
&trans   &hml LEFT_COMMAND A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LCTRL F  &hml RIGHT_ALT G  &hmr RIGHT_ALT H  &hmr LCTRL J  &hmr LEFT_SHIFT K  &hmr LEFT_ALT L  &hmr LEFT_GUI COLON  &kp SLASH
&trans   &kp Z                &kp X            &kp C              &kp V         &kp B             &kp N             &kp M         &kp COMMA          &kp DOT          &kp SEMI             &kp QUESTION
                                               &kp TAB            &mo 2         &kp ESCAPE        &kp SPACE         &mo 1         &kp BACKSPACE
            >;
        };

        lower_layer {
            display-name = "SYM";
            bindings = <
&kp GRAVE  &kp EXCL        &kp AT         &kp HASH          &kp DOLLAR            &kp PRCNT     &kp CARET     &kp AMPS               &kp STAR           &kp EQUAL         &kp UNDER        &kp TILDE
&trans     &kp NUMBER_1    &kp NUMBER_2   &kp NUMBER_3      &kp NUMBER_4          &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_7           &kp NUMBER_8       &kp NUMBER_9      &kp NUMBER_0     &kp PIPE
&trans     &kp LEFT_BRACE  &kp LESS_THAN  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp PLUS      &kp MINUS     &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp GREATER_THAN  &kp RIGHT_BRACE  &kp BACKSLASH
                                          &kp LG(LS(N5))    &trans                &kp LG(TAB)   &trans        &trans                 &kp PRINTSCREEN
            >;
        };

        raise_layer {
            display-name = "NUM";
            bindings = <
&kp C_PLAY_PAUSE  &kp LC(LEFT_SHIFT)  &kp LC(LS(HOME))      &kp LS(HOME)            &kp LS(END)              &kp LS(LC(END))         &kp HOME                &kp PAGE_DOWN       &kp PAGE_UP       &kp END                  &kp LG(A)  &kp LC(A)
&trans            &kp LA(LEFT_SHIFT)  &kp LG(LS(UP_ARROW))  &kp LG(LS(LEFT_ARROW))  &kp LG(LS(RIGHT_ARROW))  &kp LG(LS(DOWN_ARROW))  &kp LEFT_ARROW          &kp DOWN_ARROW      &kp UP_ARROW      &kp RIGHT_ARROW          &kp LG(C)  &kp LC(C)
&trans            &kp C_MUTE          &kp C_PREVIOUS        &kp C_VOLUME_UP         &kp C_VOLUME_DOWN        &kp C_NEXT              &kp LA(LS(LEFT_ARROW))  &kp LS(DOWN_ARROW)  &kp LS(UP_ARROW)  &kp LS(LA(RIGHT_ARROW))  &kp LG(V)  &kp LC(V)
                                                            &caps_word              &trans                   &trans                  &kp ENTER               &trans              &kp DELETE
            >;
        };

        adjust_layer {
            display-name = "ADJ";
            bindings = <
&bootloader  &studio_unlock  &sys_reset    &none         &bt BT_CLR    &bt BT_PRV      &bt BT_NXT      &bt BT_CLR    &none         &sys_reset    &studio_unlock  &bootloader
&kp F1       &kp F2          &kp F3        &kp F4        &kp F5        &kp F6          &kp F7          &kp F8        &kp F9        &kp F10       &kp F11         &kp F12
&trans       &bt BT_SEL 4    &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans
                                           &trans        &trans        &bt BT_CLR_ALL  &bt BT_CLR_ALL  &trans        &trans
            >;
        };
    };
};
